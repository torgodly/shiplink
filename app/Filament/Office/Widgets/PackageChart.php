<?php

namespace App\Filament\Office\Widgets;

use App\Models\Package;
use Filament\Widgets\ChartWidget;
use Flowframe\Trend\Trend;
use Flowframe\Trend\TrendValue;
use Illuminate\Contracts\Support\Htmlable;

class PackageChart extends ChartWidget
{
    protected static ?int $sort = 3;
    protected static ?string $heading = 'Packages by Week';
    public function getHeading(): string|Htmlable|null
    {
        return __(parent::getHeading()); // TODO: Change the autogenerated stub
    }
    protected int|string|array $columnSpan = 1;

    protected function getData(): array
    {
        $sent = Trend::query(Package::query()->where('sender_branch_id', auth()->user()->managedbranch->id))
            ->between(
                start: now()->startOfWeek(),
                end: now()->endOfWeek(),
            )
            ->perDay()
            ->count();
        $received = Trend::query(Package::query()->where('receiver_branch_id', auth()->user()->managedbranch->id))
            ->between(
                start: now()->startOfWeek(),
                end: now()->endOfWeek(),
            )
            ->perDay()
            ->count();
        return [
            'datasets' => [
                [
                    'label' => __('Sent Packages'),
                    'data' => $sent->map(fn (TrendValue $value) => $value->aggregate),
                    'backgroundColor' => '#247DFF',
                    'borderColor' => '#247DFF',
                    'borderWidth' => 1,
                ],
                [
                    'label' => __('Received Packages'),
                    'data' =>  $received->map(fn (TrendValue $value) => $value->aggregate),
                    'backgroundColor' => '#FADD02',
                    'borderColor' => '#FADD02',
                    'borderWidth' => 1,
                ]
            ],
            'labels' => $sent->map(fn (TrendValue $value) => $value->date),





        ];
    }

    protected function getType(): string
    {
        return 'bar';
    }
}
